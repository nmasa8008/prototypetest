"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isOAuthFlowObject = exports.isResponseObject = exports.isTagObject = exports.isServerVariableObject = exports.isServerObject = exports.isHeaderObject = exports.isBaseParameterObject = exports.isSecuritySchemeWithKey = exports.isSecurityScheme = void 0;
const lodash_1 = require("lodash");
const utils_1 = require("../utils");
exports.isSecurityScheme = (maybeSecurityScheme) => lodash_1.isObject(maybeSecurityScheme) && typeof maybeSecurityScheme.type === 'string';
exports.isSecuritySchemeWithKey = (maybeSecurityScheme) => exports.isSecurityScheme(maybeSecurityScheme) && typeof maybeSecurityScheme.key === 'string';
exports.isBaseParameterObject = (maybeBaseParameterObject) => lodash_1.isObject(maybeBaseParameterObject) &&
    ('description' in maybeBaseParameterObject ||
        'required' in maybeBaseParameterObject ||
        'content' in maybeBaseParameterObject ||
        'style' in maybeBaseParameterObject ||
        'examples' in maybeBaseParameterObject ||
        'example' in maybeBaseParameterObject ||
        'schema' in maybeBaseParameterObject ||
        'name' in maybeBaseParameterObject);
exports.isHeaderObject = (maybeHeaderObject) => exports.isBaseParameterObject(maybeHeaderObject);
exports.isServerObject = (maybeServerObject) => lodash_1.isObject(maybeServerObject) && typeof maybeServerObject.url === 'string';
exports.isServerVariableObject = (maybeServerVariableObject) => {
    if (!lodash_1.isObject(maybeServerVariableObject))
        return false;
    const typeofDefault = typeof maybeServerVariableObject.default;
    return typeofDefault === 'string' || typeofDefault === 'boolean' || typeofDefault === 'number';
};
exports.isTagObject = (maybeTagObject) => {
    if (lodash_1.isObject(maybeTagObject) && 'name' in maybeTagObject) {
        return typeof maybeTagObject.name === 'string';
    }
    return false;
};
exports.isResponseObject = (maybeResponseObject) => lodash_1.isObject(maybeResponseObject) &&
    ('description' in maybeResponseObject ||
        'headers' in maybeResponseObject ||
        'content' in maybeResponseObject ||
        'links' in maybeResponseObject);
exports.isOAuthFlowObject = (maybeOAuthFlowObject) => utils_1.isDictionary(maybeOAuthFlowObject) && utils_1.isDictionary(maybeOAuthFlowObject.scopes);
//# sourceMappingURL=guards.js.map