<?xml version="1.0" encoding="utf-8"?>
<!--
     This configuration file is required if iisnode is used to run node processes behind
     IIS or IIS Express.  For more information, visit:
     https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config
-->

<configuration>
  <system.webServer>
    <!-- Visit http://blogs.msdn.com/b/windowsazure/archive/2013/11/14/introduction-to-websockets-on-windows-azure-web-sites.aspx for more information on WebSocket support -->
    <webSocket enabled="false" />
    <handlers>
      <!-- Indicates that the server.js file is a node.js site to be handled by the iisnode module -->
      <!-- server.js ファイルが iisnode モジュールが扱う node.js サイトであることを示します。-->
      <add name="iisnode" path="server/app.js" verb="*" modules="iisnode"/>
    </handlers>
    <rewrite>
      <rules>
        <!-- Do not interfere with requests for node-inspector debugging -->
        <!-- node-inspectorのデバッグ要求を妨害しないでください。 -->
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^index.js\/debug[\/]?" />
        </rule>

        <!-- First we consider whether the incoming URL matches a physical file in the /public folder -->
         <!-- 最初に、入力されたURLが/publicフォルダ内の物理ファイルと一致するかどうかを検討します。 -->
        <rule name="StaticContent">
          <action type="Rewrite" url="public{REQUEST_URI}"/>
        </rule>

        <!-- All other URLs are mapped to the node.js site entry point -->
        <!-- その他のURLはすべてnode.jsサイトのエントリーポイントにマップされています。 -->
        <rule name="DynamicContent">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
          </conditions>
          <action type="Rewrite" url="server/app.js"/>
        </rule>
      </rules>
    </rewrite>

    <!-- 'bin' directory has no special meaning in node.js and apps can be placed in it -->
    <!-- bin' ディレクトリはnode.jsでは特別な意味を持たず、アプリはこのディレクトリに置くことができます。 -->
    <security>
      <requestFiltering>
        <hiddenSegments>
          <remove segment="bin"/>
        </hiddenSegments>
      </requestFiltering>
    </security>

    <!-- Make sure error responses are left untouched -->
    <!-- エラー応答はそのままにしておくようにしてください。 -->
    <httpErrors existingResponse="PassThrough" />

    <!--
      You can control how Node is hosted within IIS using the following options:
        * watchedFiles: semi-colon separated list of files that will be watched for changes to restart the server
        * node_env: will be propagated to node as NODE_ENV environment variable
        * debuggingEnabled - controls whether the built-in debugger is enabled
      See https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config for a full list of options
    -->
    <!-- 以下のオプションを使用して、IIS内でNodeがどのようにホストされるかを制御することができます。
        * watchedFiles: サーバを再起動するために変更を監視するファイルのセミコロンで区切られたリスト
        * node_env: 環境変数node_envとしてノードに伝搬されます。
        * debuggingEnabled - 組み込みデバッガーが有効かどうかを制御します。
      オプションの完全なリストは https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config を参照してください。 -->
    <!--<iisnode watchedFiles="web.config;*.js"/>-->
  </system.webServer>
</configuration>